name: Unity CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  testProject:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          
      - name: Clean generated files
        run: |
          rm -rf ./Library
          rm -rf ./Build
          rm -rf ./obj

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-Test-${{ hashFiles('Packages/manifest.json') }}
          restore-keys: Library-Test-

      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          testMode: all
          artifactsPath: test-results
          coverageOptions: none

      - uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: test-results

  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    needs: testProject # Ensures tests pass before building
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    steps:
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Clean generated files
        run: |
          rm -rf ./Library
          rm -rf ./Build
          rm -rf ./obj

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Packages/manifest.json') }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
